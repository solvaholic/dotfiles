#!/bin/sh

#
# Use these scripts to setup and develop the dotfiles in this repository.
#
# - script/setup:
#
#     - Load ~/.dotfiles.conf and $DOTFILES_ROOT/dotfiles.sh.
#     - Run under $DOTFILES_SHELL, unless it's set to "current".
#     - For each topic, run setup if it exists or just link files.
#
# Usage:
#   ./script/setup
#

# Load ~/.dotfiles.conf and $DOTFILES_ROOT/dotfiles.sh.
# shellcheck disable=SC1090
. ~/.dotfiles.conf || exit
. "$DOTFILES_ROOT/dotfiles.sh" || exit
debug "$0: Loaded ~/.dotfiles.conf and ran $DOTFILES_ROOT/dotfiles.sh OK."


# Run under $DOTFILES_SHELL, unless it's set to "current".
if [ -z "$DOTFILES_EXEC" ] && [ "$DOTFILES_SHELL" != "current" ]; then
  # $DOTFILES_EXEC is not set and $DOTFILES_SHELL is not "current".
  # Set $DOTFILES_EXEC here, so we won't loop.
  debug "$0: 'exec \"$DOTFILES_SHELL\" -c \"DOTFILES_EXEC=$DOTFILES_SHELL $0\"'"
  exec "$DOTFILES_SHELL" -c "DOTFILES_EXEC=$DOTFILES_SHELL $0"
fi


# For each topic, run setup if it exists or just link files.
debug "$0: Entering topics setup..."
cd "$DOTFILES_ROOT" || exit
mytopics="$(find -H . -maxdepth 3 \
! -path "*/.git/*" ! -path "*/script/*" -name setup -o -name "*.symlink" \
| cut -d/ -f2 | sort -u)"

debug "$0: Found topics: $mytopics"

# We need these 3, for when we call link_file().
# shellcheck disable=SC2034
overwrite_all="false" backup_all="false" skip_all="false"

for thistopic in $mytopics; do
  info "Setting up topic '$thistopic'..."
  if [ -r "$DOTFILES_ROOT/$thistopic/setup" ]; then
    debug "$0: $DOTFILES_ROOT/$thistopic/setup"
    "$DOTFILES_ROOT/$thistopic/setup"
    myresult=$?
  else
    # $thistopic has no setup, so just link its *.symlink files.
    mysymlinks="$(find -H "$DOTFILES_ROOT/$thistopic" -maxdepth 2 -name '*.symlink' ! -path '*/.git*')"
    debug "$0: Found files to link: $mysymlinks"
    # TODO: Fix this so it'll handle filenames with spaces.
    for source in $mysymlinks; do
      target="$HOME/.$(basename "${source%.*}")"
      debug "$0: 'link_file \"$source\" \"$target\"'"
      link_file "$source" "$target"
    done
    myresult=$?
  fi
done

if [ $myresult -eq 0 ]; then
  success "$0: Success."
else
  fail "$0: Failure."
fi

exit $myresult
