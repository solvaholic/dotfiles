#!/bin/sh
#
# Ensures dependencies are met for cwm(1). Currently:
# - We're running OpenBSD.
# - X(7) and cwm are installed.
#

script_name=cwm/bootstrap

#
# Make sure `bootstrap` was called in a way we can get its path.
#
if [ -f "$0" ] && [ $( dirname "$0" ) ]; then
  # $0 is a file and `dirname` succeeds, so we think Yes.
  script_root="$( cd $( dirname "$0" ) && echo $PWD )"
else
  # $0 is not a file or `dirname` fails, so we think No.
  script_root=
  printf "\n[FAIL] $script_name: This script was called incorrectly. Unable to set \$script_root.\n\n"
  exit 1
fi

#
# Call dotfiles.sh to set some variables and define some functions.
#
if [ -x "$script_root/../dotfiles.sh" ]; then
  . "$script_root/../dotfiles.sh"
else
  printf "\n[FAIL] $script_name: Can't find 'dotfiles.sh'. Abort!\n\n"
  exit 1
fi

# Initialize $DOTFILES_DEBUG and $with_warnings.
DOTFILES_DEBUG=
with_warnings=0

#
# Are we running a supported operating system?
#
check_os () {
  if [ "$WHICHOS" = "OpenBSD" ]; then
    return "yes"
  else
    return "no"
  fi
}

#
# Are all dependencies installed?
#
check_dep () {
  if [ "$( which startx )" = "/usr/X11R6/bin/startx" ] && \
    [ "$( which cwm )" = "/usr/X11R6/bin/cwm" ]; then
    return "yes"
  else
    return "no"
  fi
}

#
# Do the needful.
#

# Warn, if we're running as root.
if [ "$( id -u )" = "0" ]; then
  # We're running as root?!
  user "$script_name: This script is running as root!"
  with_warnings=$(( with_warnings+1 ))
fi

info "$script_name: Verifying dependencies..."

if [ ! check_os = "yes" ]; then
  fail "$script_name: Unsupported operating system, '$WHICHOS'."
  exit 1
elif [ ! check_dep = "yes" ]; then
  fail "$script_name: Missing dependencies. Check your X(7) and cwm(1) installs."
  exit 1
fi

#
# All done!
#
if [ $with_warnings -eq 0 ]; then
  success "$script_name: Finished!"
else
  success "$script_name: Finished, with $with_warnings warnings. Please resolve any '[ ?? ]' notices reported above."
fi
